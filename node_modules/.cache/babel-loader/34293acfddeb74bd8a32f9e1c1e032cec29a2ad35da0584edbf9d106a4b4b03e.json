{"ast":null,"code":"import _regeneratorRuntime from\"/Users/tatianawiener/Documents/GitHub/ycc/node_modules/@babel/runtime/helpers/esm/regeneratorRuntime.js\";import _asyncToGenerator from\"/Users/tatianawiener/Documents/GitHub/ycc/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";export var ethereum=window.ethereum;// check if metamask extension is installed on the browser\nexport var isMetaMaskInstalled=function isMetaMaskInstalled(){if(ethereum){return true;}return false;};// connect to metakmask wallet\nexport var connectWallet=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee(){var accounts;return _regeneratorRuntime().wrap(function _callee$(_context){while(1)switch(_context.prev=_context.next){case 0:_context.next=2;return ethereum.request({method:'eth_requestAccounts'});case 2:accounts=_context.sent;return _context.abrupt(\"return\",accounts);case 4:case\"end\":return _context.stop();}},_callee);}));return function connectWallet(){return _ref.apply(this,arguments);};}();// connect to metakmask wallet\nexport var connectAccount=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee2(){var accounts;return _regeneratorRuntime().wrap(function _callee2$(_context2){while(1)switch(_context2.prev=_context2.next){case 0:_context2.next=2;return ethereum.request({method:'eth_accounts'});case 2:accounts=_context2.sent;return _context2.abrupt(\"return\",accounts);case 4:case\"end\":return _context2.stop();}},_callee2);}));return function connectAccount(){return _ref2.apply(this,arguments);};}();// disconnect metamask wallet\nexport var disconnectWallet=function disconnectWallet(){localStorage.removeItem('isWalletConnected');window.location.reload();};// check metamask on disconnect\nexport var onMetamaskDisconnect=function onMetamaskDisconnect(){ethereum.on('disconnect',function(){console.log('Disconnected');});};// check metamask on connected\nexport var onMetamaskconnect=/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee3(){var chainId;return _regeneratorRuntime().wrap(function _callee3$(_context3){while(1)switch(_context3.prev=_context3.next){case 0:_context3.next=2;return getChainId();case 2:chainId=_context3.sent;ethereum.on('connect',function(){console.log(chainId);});case 4:case\"end\":return _context3.stop();}},_callee3);}));return function onMetamaskconnect(){return _ref3.apply(this,arguments);};}();// on chain change\nexport var onChainChange=function onChainChange(){ethereum.on('chainChanged',function(_chainId){return parseInt(_chainId);});};export var getChainId=/*#__PURE__*/function(){var _ref4=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime().mark(function _callee4(){var chainId;return _regeneratorRuntime().wrap(function _callee4$(_context4){while(1)switch(_context4.prev=_context4.next){case 0:_context4.next=2;return ethereum.request({method:'eth_chainId'});case 2:chainId=_context4.sent;return _context4.abrupt(\"return\",parseInt(chainId));case 4:case\"end\":return _context4.stop();}},_callee4);}));return function getChainId(){return _ref4.apply(this,arguments);};}();export var isWalletConnected=function isWalletConnected(){if(localStorage.getItem('isWalletConnected')==='true'){return true;}return false;};","map":{"version":3,"names":["ethereum","window","isMetaMaskInstalled","connectWallet","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","accounts","wrap","_callee$","_context","prev","next","request","method","sent","abrupt","stop","apply","arguments","connectAccount","_ref2","_callee2","_callee2$","_context2","disconnectWallet","localStorage","removeItem","location","reload","onMetamaskDisconnect","on","console","log","onMetamaskconnect","_ref3","_callee3","chainId","_callee3$","_context3","getChainId","onChainChange","_chainId","parseInt","_ref4","_callee4","_callee4$","_context4","isWalletConnected","getItem"],"sources":["/Users/tatianawiener/Documents/GitHub/ycc/src/utils/web3functions.js"],"sourcesContent":["export const ethereum = window.ethereum;\n\n\n// check if metamask extension is installed on the browser\nexport const isMetaMaskInstalled = () =>{\n    if(ethereum){\n        return true;\n    }\n\n    return false;\n}\n\n\n// connect to metakmask wallet\nexport const connectWallet = async () =>{\n    const accounts = await ethereum.request({method: 'eth_requestAccounts'});\n    \n    return accounts;\n}\n\n// connect to metakmask wallet\nexport const connectAccount = async () =>{\n    const accounts = await ethereum.request({method: 'eth_accounts'});\n    \n    return accounts;\n}\n\n\n// disconnect metamask wallet\nexport const disconnectWallet = () =>{\n    localStorage.removeItem('isWalletConnected');\n    window.location.reload();\n}\n\n// check metamask on disconnect\nexport const onMetamaskDisconnect = () =>{\n    ethereum.on('disconnect', () =>{\n        console.log('Disconnected');\n    });\n}\n\n\n// check metamask on connected\nexport const onMetamaskconnect = async () =>{\n    const chainId = await getChainId();\n    ethereum.on('connect', () =>{\n        console.log(chainId);\n    });\n}\n\n// on chain change\nexport const onChainChange = () =>{\n    ethereum.on('chainChanged', (_chainId) =>{\n        return parseInt(_chainId);\n    });\n}\n\nexport const getChainId = async () =>{\n    const chainId = await ethereum.request({ method: 'eth_chainId' });\n\n    return parseInt(chainId);\n}\n\n\nexport const isWalletConnected = () => {\n    if(localStorage.getItem('isWalletConnected') === 'true'){\n        return true\n    }\n\n    return false;\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}