{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\16176\\\\Documents\\\\GitHub\\\\Tatiana-W.github.io\\\\src\\\\components\\\\ModeSwitch\\\\index.jsx\",\n  _s = $RefreshSig$();\nimport { Icon } from '@iconify/react';\nimport React, { useEffect, useState } from 'react';\nimport Section from '../Section';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ModeSwitch() {\n  _s();\n  const [darkMode, setDarkMode] = useState(true);\n  const activateMode = async () => {\n    if (darkMode === false) {\n      document.body.classList.add('cs-dark');\n      document.body.classList.remove('cs-light');\n      await localStorage.setItem('Theme', 'dark_mode');\n    }\n    if (darkMode === true) {\n      document.body.classList.remove('cs-dark');\n      document.body.classList.add('cs-light');\n      await localStorage.setItem('Theme', 'light_mode');\n    }\n    setDarkMode(!darkMode);\n  };\n  useEffect(() => {\n    if (localStorage.getItem('Theme') === 'light_mode') {\n      document.body.classList.remove('cs-dark');\n      document.body.classList.add('cs-light');\n    } else if (localStorage.getItem('Theme') === 'dark_mode') {\n      document.body.classList.add('cs-dark');\n      document.body.classList.remove('cs-light');\n    }\n    if (!localStorage.getItem('Theme')) {\n      localStorage.setItem('Theme', 'dark_mode');\n      setDarkMode(true);\n    }\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Section, {\n    tag: \"span\",\n    className: \"cs-icon_btn cs-mode_btn\",\n    onClick: activateMode,\n    children: [/*#__PURE__*/_jsxDEV(Icon, {\n      icon: \"ph:moon\",\n      className: \"cs-hide_dark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Icon, {\n      icon: \"ph:sun-bold\",\n      className: \"cs-hide_white\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_s(ModeSwitch, \"Ejy9vPVyQHNoZPLjZpLQT0WIFpc=\");\n_c = ModeSwitch;\nvar _c;\n$RefreshReg$(_c, \"ModeSwitch\");","map":{"version":3,"names":["Icon","React","useEffect","useState","Section","jsxDEV","_jsxDEV","ModeSwitch","_s","darkMode","setDarkMode","activateMode","document","body","classList","add","remove","localStorage","setItem","getItem","tag","className","onClick","children","icon","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/16176/Documents/GitHub/Tatiana-W.github.io/src/components/ModeSwitch/index.jsx"],"sourcesContent":["import { Icon } from '@iconify/react'\r\nimport React, { useEffect, useState } from 'react'\r\nimport Section from '../Section'\r\n\r\nexport default function ModeSwitch() {\r\n  const [darkMode, setDarkMode] = useState(true)\r\n  const activateMode = async () => {\r\n    if(darkMode === false) {\r\n      document.body.classList.add('cs-dark')\r\n      document.body.classList.remove('cs-light')\r\n      await localStorage.setItem('Theme', 'dark_mode')\r\n    }\r\n    if(darkMode === true) {\r\n      document.body.classList.remove('cs-dark')\r\n      document.body.classList.add('cs-light')\r\n      await localStorage.setItem('Theme', 'light_mode')\r\n    }\r\n    setDarkMode(!darkMode)\r\n  }\r\n  useEffect(() => {\r\n    if(localStorage.getItem('Theme')==='light_mode') {\r\n      document.body.classList.remove('cs-dark')\r\n      document.body.classList.add('cs-light')\r\n    } else if (localStorage.getItem('Theme')==='dark_mode') {\r\n      document.body.classList.add('cs-dark')\r\n      document.body.classList.remove('cs-light')\r\n    }\r\n    if(!localStorage.getItem('Theme')){\r\n      localStorage.setItem('Theme', 'dark_mode')\r\n      setDarkMode(true)\r\n    }\r\n  }, [])\r\n\r\n  return (\r\n    <Section tag='span' className=\"cs-icon_btn cs-mode_btn\" onClick={activateMode}>\r\n      <Icon icon=\"ph:moon\" className='cs-hide_dark'/>\r\n      <Icon icon=\"ph:sun-bold\" className='cs-hide_white' />\r\n    </Section>\r\n  )\r\n}\r\n"],"mappings":";;AAAA,SAASA,IAAI,QAAQ,gBAAgB;AACrC,OAAOC,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,OAAOC,OAAO,MAAM,YAAY;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAEhC,eAAe,SAASC,UAAUA,CAAA,EAAG;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAC9C,MAAMQ,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/B,IAAGF,QAAQ,KAAK,KAAK,EAAE;MACrBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MACtCH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;MAC1C,MAAMC,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC;IAClD;IACA,IAAGT,QAAQ,KAAK,IAAI,EAAE;MACpBG,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;MACzCJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;MACvC,MAAME,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,YAAY,CAAC;IACnD;IACAR,WAAW,CAAC,CAACD,QAAQ,CAAC;EACxB,CAAC;EACDP,SAAS,CAAC,MAAM;IACd,IAAGe,YAAY,CAACE,OAAO,CAAC,OAAO,CAAC,KAAG,YAAY,EAAE;MAC/CP,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,SAAS,CAAC;MACzCJ,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,UAAU,CAAC;IACzC,CAAC,MAAM,IAAIE,YAAY,CAACE,OAAO,CAAC,OAAO,CAAC,KAAG,WAAW,EAAE;MACtDP,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACC,GAAG,CAAC,SAAS,CAAC;MACtCH,QAAQ,CAACC,IAAI,CAACC,SAAS,CAACE,MAAM,CAAC,UAAU,CAAC;IAC5C;IACA,IAAG,CAACC,YAAY,CAACE,OAAO,CAAC,OAAO,CAAC,EAAC;MAChCF,YAAY,CAACC,OAAO,CAAC,OAAO,EAAE,WAAW,CAAC;MAC1CR,WAAW,CAAC,IAAI,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,oBACEJ,OAAA,CAACF,OAAO;IAACgB,GAAG,EAAC,MAAM;IAACC,SAAS,EAAC,yBAAyB;IAACC,OAAO,EAAEX,YAAa;IAAAY,QAAA,gBAC5EjB,OAAA,CAACN,IAAI;MAACwB,IAAI,EAAC,SAAS;MAACH,SAAS,EAAC;IAAc;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAC,CAAC,eAC/CtB,OAAA,CAACN,IAAI;MAACwB,IAAI,EAAC,aAAa;MAACH,SAAS,EAAC;IAAe;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC9C,CAAC;AAEd;AAACpB,EAAA,CAnCuBD,UAAU;AAAAsB,EAAA,GAAVtB,UAAU;AAAA,IAAAsB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}