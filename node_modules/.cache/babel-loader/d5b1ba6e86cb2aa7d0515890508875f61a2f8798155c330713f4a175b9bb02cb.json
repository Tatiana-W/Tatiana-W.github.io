{"ast":null,"code":"import contract from '../contract/ABI.json';\nimport { ethers } from 'ethers';\nimport { isMetaMaskInstalled, ethereum } from '../utils/web3functions';\nexport const mint = async mint_amount => {\n  if (isMetaMaskInstalled()) {\n    const provider = new ethers.providers.Web3Provider(ethereum);\n    const signer = provider.getSigner();\n    const contractAddress = \"0x9582Cb891566e6147E4e949482d71673dB5EE9da\";\n    const nftContract = new ethers.Contract(contractAddress, contract, signer);\n    let txnHash = await nftContract.mint(mint_amount, {\n      gasLimit: \"285000\",\n      value: ethers.utils.parseEther((0.001 * mint_amount).toString())\n    });\n    return txnHash;\n  }\n};","map":{"version":3,"names":["contract","ethers","isMetaMaskInstalled","ethereum","mint","mint_amount","provider","providers","Web3Provider","signer","getSigner","contractAddress","nftContract","Contract","txnHash","gasLimit","value","utils","parseEther","toString"],"sources":["C:/Users/16176/Documents/GitHub/Tatiana-W.github.io/src/utils/web3mint.js"],"sourcesContent":["import contract from '../contract/ABI.json';\r\nimport { ethers } from 'ethers';\r\nimport { isMetaMaskInstalled, ethereum } from '../utils/web3functions';\r\n\r\n\r\n\r\nexport const mint = async (mint_amount) => {\r\n    if(isMetaMaskInstalled()){\r\n        const provider = new ethers.providers.Web3Provider(ethereum);\r\n        const signer = provider.getSigner();\r\n        const contractAddress = \"0x9582Cb891566e6147E4e949482d71673dB5EE9da\";\r\n        const nftContract = new ethers.Contract(contractAddress, contract, signer);\r\n\r\n        let txnHash = await nftContract.mint(mint_amount, {\r\n            gasLimit: \"285000\",\r\n            value: ethers.utils.parseEther((0.001 * mint_amount).toString())\r\n        })\r\n        return txnHash\r\n    }\r\n}"],"mappings":"AAAA,OAAOA,QAAQ,MAAM,sBAAsB;AAC3C,SAASC,MAAM,QAAQ,QAAQ;AAC/B,SAASC,mBAAmB,EAAEC,QAAQ,QAAQ,wBAAwB;AAItE,OAAO,MAAMC,IAAI,GAAG,MAAOC,WAAW,IAAK;EACvC,IAAGH,mBAAmB,CAAC,CAAC,EAAC;IACrB,MAAMI,QAAQ,GAAG,IAAIL,MAAM,CAACM,SAAS,CAACC,YAAY,CAACL,QAAQ,CAAC;IAC5D,MAAMM,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;IACnC,MAAMC,eAAe,GAAG,4CAA4C;IACpE,MAAMC,WAAW,GAAG,IAAIX,MAAM,CAACY,QAAQ,CAACF,eAAe,EAAEX,QAAQ,EAAES,MAAM,CAAC;IAE1E,IAAIK,OAAO,GAAG,MAAMF,WAAW,CAACR,IAAI,CAACC,WAAW,EAAE;MAC9CU,QAAQ,EAAE,QAAQ;MAClBC,KAAK,EAAEf,MAAM,CAACgB,KAAK,CAACC,UAAU,CAAC,CAAC,KAAK,GAAGb,WAAW,EAAEc,QAAQ,CAAC,CAAC;IACnE,CAAC,CAAC;IACF,OAAOL,OAAO;EAClB;AACJ,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}